apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "contour.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "contour.name" . }}
    chart: {{ template "contour.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "contour.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "contour.name" . }}
        release: {{ .Release.Name }}
    {{- with .Values.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      containers:
      # Note that by default we use appVersion to get images tag.
      - image: "{{ .Values.contour.image.repository }}:{{ default .Chart.AppVersion .Values.contour.image.tag }}"
        imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
        name: contour
        command: ["contour"]
        args: ["serve", "--incluster"]
      - image: "{{ .Values.envoy.image.repository }}:{{ .Values.envoy.image.tag }}"
        imagePullPolicy: {{ .Values.envoy.image.pullPolicy }}
        name: envoy
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        command: ["envoy"]
        args:
        - --config-path /config/contour.yaml
        - --service-cluster cluster0
        - --service-node node0
        - --log-level info
        - --v2-config-only
        volumeMounts:
        - name: contour-config
          mountPath: /config
      initContainers:
      - image: "{{ .Values.contour.image.repository }}:{{ default .Chart.AppVersion .Values.contour.image.tag }}"
        imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
        name: envoy-initconfig
        command: ["contour"]
        args: ["bootstrap", "/config/contour.yaml"]
        volumeMounts:
        - name: contour-config
          mountPath: /config
      volumes:
      - name: contour-config
        emptyDir: {}
      dnsPolicy: ClusterFirst
      serviceAccountName: {{ template "contour.fullname" . }}
      terminationGracePeriodSeconds: 30
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      # The affinity stanza below tells Kubernetes to try hard not to place 2 of
      # these pods on the same node.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "contour.name" . }}
            topologyKey: "kubernetes.io/hostname"
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
